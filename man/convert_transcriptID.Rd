% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/convert_transcriptID.R
\name{convert_transcriptID}
\alias{convert_transcriptID}
\title{Convert transcript IDs between different databases}
\usage{
convert_transcriptID(
  dat,
  db,
  biomart_ens = "ensembl",
  biomart_snp = "snps",
  dataset_ens = "hsapiens_gene_ensembl",
  dataset_snp = "hsapiens_snp",
  getBM_attributes_ens = c("refseq_mrna", "ensembl_transcript_id", "hgnc_symbol"),
  getBM_attributes_ngs = c("refsnp_id", "chr_name", "chrom_start", "chrom_end"),
  filters_ens = "refseq_mrna",
  filters_ngs = "chromosomal_region"
)
}
\arguments{
\item{dat}{a dataframe including Transcript_version, nucleotide "C1768G"
refers to ref/CDS position/alt.}

\item{db}{`EnsDb` object. Default is EnsDb.Hsapiens.v75.}

\item{biomart_ens}{selection of BioMart database. Default is "ensembl".}

\item{biomart_snp}{selection of BioMart database. Default is "snps".}

\item{dataset_ens}{BioMart databases includes many datasets. Choose dataset in the database.
Default is "hsapiens_gene_ensembl".}

\item{dataset_snp}{BioMart databases includes many datasets. Choose dataset in the database.
Default is "hsapiens_snp".}

\item{getBM_attributes_ens}{defines the values of interests.
Default shows "refseq_mrna", "ensembl_transcript_id", "hgnc_symbol".
The listAttributes function displays all available attributes in the selected dataset.}

\item{getBM_attributes_ngs}{defines the values of interests.
Default shows "refsnp_id", "chr_name", "chrom_start", "chrom_end".
The listAttributes function displays all available attributes in the selected dataset.}

\item{filters_ens}{a vector of filters to query. Default shows "refseq_mrna".}

\item{filters_ngs}{a vector of filters to query. Default shows "chromosomal_region".}
}
\value{
a new dataset with converting information
}
\description{
Preprocessing, converting and mapping
}
\examples{
library(EnsDb.Hsapiens.v75)
db=EnsDb.Hsapiens.v75::EnsDb.Hsapiens.v75
dat<-read.csv(system.file("extdata",
                          "convertID_data.csv",
                          package = "MRAT"),
              stringsAsFactors = FALSE, encoding = "UTF-8", row.names = NULL, sep = ",")
new_dat<-convert_transcriptID(dat, db, biomart_ens="ensembl", biomart_snp="snps",
dataset_ens="hsapiens_gene_ensembl", dataset_snp="hsapiens_snp",
getBM_attributes_ens=c("refseq_mrna", "ensembl_transcript_id", "hgnc_symbol"),
getBM_attributes_ngs=c('refsnp_id', 'chr_name', 'chrom_start', 'chrom_end'),
filters_ens="refseq_mrna", filters_ngs="chromosomal_region")

}
